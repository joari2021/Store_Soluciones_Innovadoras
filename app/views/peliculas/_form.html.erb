<%= turbo_frame_tag "modal-peliculas" do%>
  <%= form_with(model: pelicula, local: false, data: { visit: @editing }, id: "form-peliculas") do |form| %>
    <% if pelicula.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(pelicula.errors.count, "error") %> prohibited this pelicula from being saved:</h2>
        <ul>
          <% pelicula.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
    <div class="field">
      <%= form.label :poster %>
      <%= form.file_field :poster %>
    </div>
    <div class="field">
      <%= form.label :name %>
      <%= form.text_field :name %>
    </div>
    <div class="field">
      <%= form.label :date_estreno, "Fecha de Estreno" %>
      <%= form.date_select :date_estreno, { order: [:day, :month, :year] }, class: "form-control" %>
    </div>
    <div class="field">
      <%= form.label :link_trailer %>
      <%= form.text_field :link_trailer %>
    </div>
    <div class="field">
      <%= form.label :sinopsis %>
      <%= form.text_area :sinopsis %>
    </div>
    <h3>Puntuaciones</h3>
    <div id="rankings">
      <%= form.fields_for :rankings do |pf| %>
        <%= render "ranking_fields", pf: pf%>
      <% end %>
    </div>
    <%= link_to_add_fields "Add Puntuacion", form, :rankings %>
    <div class="field">
      <span>Generos:</span>
      <br>
      <%= form.collection_check_boxes(:genero_ids, Genero.all, :id, :name) do |b| %>
        <div class="collection-check-box">
          <%= b.check_box %>
          <%= b.label %>
        </div>
      <% end %>
    </div>
    <div class="actions">
      <%= form.submit %>
    </div>
  <% end %>
<%end%>
<script>
  document.querySelectorAll('.add_fields').forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      let time = new Date().getTime();
      let link = this;
      let regexp = new RegExp(link.dataset.id, 'g');
      document.querySelector('#rankings').insertAdjacentHTML('beforeend', link.dataset.fields.replace(regexp, time));
    });
  });
  /*
  document.addEventListener('click', function(e) {
    if (e.target && e.target.classList.contains('remove_fields')) {
      e.preventDefault();
      let fieldParent = e.target.closest('.field');
      if (fieldParent) {
        fieldParent.remove();
      }
    }
  });*/

  document.querySelectorAll(".remove_fields").forEach(function(button) {
    button.addEventListener("click", function(event) {
      event.preventDefault();
      let field = event.target.closest(".field");
      field.querySelector("input[type='hidden']").value = "1";
      field.style.display = "none";

    });
  });

  /*
  document.querySelectorAll(".add_fields").forEach(function(button) {
    button.addEventListener("click", function(event) {
      let time = new Date().getTime();
      let link = event.target;
      let association = link.dataset.association;
      let content = link.dataset.content.replace(/new_record/g, time);
      document.querySelector("#puntuaciones").insertAdjacentHTML("beforeend", content);
      event.preventDefault();
    });
  });*/
</script>
